p.question-title
  strong = @question.title

.col-lg-1.center
  div class="question-rating" id="question_#{@question.id}"
    = t('common.rating')
    .top-buffer
      - if !current_user || (current_user && current_user.can_vote?(@question))
        = link_to vote_up_question_path(@question), method: :patch, remote: true,
                  id: "vote_up-question-#{@question.id}",
                  class: "btn btn-black vote_up",
                  data: { type: :json } do
          i.fa.fa-chevron-up
    .rating-value
      = @question.rating
    - if !current_user || (current_user && current_user.can_vote?(@question))
      = link_to vote_down_question_path(@question), method: :patch, remote: true,
                id: "vote_down-question-#{@question.id}",
                class: "btn btn-black vote_down",
                data: { type: :json } do
          i.fa.fa-chevron-down
    - if current_user && current_user.voted_for?(@question)
      = link_to vote_destroy_question_path(@question), method: :delete, remote: true,
                id: "vote_destroy-question-#{@question.id}",
                class: "btn btn-black vote_destroy",
                data: { type: :json } do
          i.fa.fa-undo


.col-lg-11
  p.question-body = @question.body

  = render 'attachments/attachments', attachable: @question

  .right
    strong = t('common.author')
    = @question.user ? @question.user.email : t('common.not_defined')

.col-lg-12.right
  = link_to t('links.back'), questions_path

  - if current_user && current_user.author_of?(@question)
    = render 'common/edit_destroy_links', resource: @question, remote: false

.col-lg-12.top-buffer
  .question-errors
  = render 'form', hidden: true, remote: true
